#############################################################################
# Makefile for building: life_gui
# Generated by qmake (2.01a) (Qt 4.8.4) on: Tue Dec 17 17:15:20 2013
# Project:  life_gui.pro
# Template: app
# Command: /usr/bin/qmake-qt4 -o QMakefile life_gui.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fstack-protector --param=ssp-buffer-size=4 -m64 -mtune=generic -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fstack-protector --param=ssp-buffer-size=4 -m64 -mtune=generic -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/lib64/qt4/mkspecs/linux-g++ -I. -I/usr/include/QtCore -I/usr/include/QtGui -I/usr/include -I. -I.
LINK          = g++
LFLAGS        = -Wl,-O1 -Wl,-z,relro
LIBS          = $(SUBLIBS)  -L/usr/lib64 -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = 
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = control.cc \
		grid_window.cc \
		gui_grid.cc \
		life_grid.cc \
		life_gui.cc \
		life_parsing.cc \
		parsing.cc moc_control.cpp \
		moc_grid_window.cpp \
		moc_gui_grid.cpp
OBJECTS       = control.o \
		grid_window.o \
		gui_grid.o \
		life_grid.o \
		life_gui.o \
		life_parsing.o \
		parsing.o \
		moc_control.o \
		moc_grid_window.o \
		moc_gui_grid.o
DIST          = /usr/lib64/qt4/mkspecs/common/unix.conf \
		/usr/lib64/qt4/mkspecs/common/linux.conf \
		/usr/lib64/qt4/mkspecs/common/gcc-base.conf \
		/usr/lib64/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/lib64/qt4/mkspecs/common/g++-base.conf \
		/usr/lib64/qt4/mkspecs/common/g++-unix.conf \
		/usr/lib64/qt4/mkspecs/qconfig.pri \
		/usr/lib64/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/lib64/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/lib64/qt4/mkspecs/features/qt_functions.prf \
		/usr/lib64/qt4/mkspecs/features/qt_config.prf \
		/usr/lib64/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/lib64/qt4/mkspecs/features/default_pre.prf \
		/usr/lib64/qt4/mkspecs/features/release.prf \
		/usr/lib64/qt4/mkspecs/features/default_post.prf \
		/usr/lib64/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/lib64/qt4/mkspecs/features/warn_on.prf \
		/usr/lib64/qt4/mkspecs/features/qt.prf \
		/usr/lib64/qt4/mkspecs/features/unix/thread.prf \
		/usr/lib64/qt4/mkspecs/features/moc.prf \
		/usr/lib64/qt4/mkspecs/features/resources.prf \
		/usr/lib64/qt4/mkspecs/features/uic.prf \
		/usr/lib64/qt4/mkspecs/features/yacc.prf \
		/usr/lib64/qt4/mkspecs/features/lex.prf \
		/usr/lib64/qt4/mkspecs/features/include_source_dir.prf \
		life_gui.pro
QMAKE_TARGET  = life_gui
DESTDIR       = 
TARGET        = life_gui

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: QMakefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

QMakefile: life_gui.pro  /usr/lib64/qt4/mkspecs/linux-g++/qmake.conf /usr/lib64/qt4/mkspecs/common/unix.conf \
		/usr/lib64/qt4/mkspecs/common/linux.conf \
		/usr/lib64/qt4/mkspecs/common/gcc-base.conf \
		/usr/lib64/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/lib64/qt4/mkspecs/common/g++-base.conf \
		/usr/lib64/qt4/mkspecs/common/g++-unix.conf \
		/usr/lib64/qt4/mkspecs/qconfig.pri \
		/usr/lib64/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/lib64/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/lib64/qt4/mkspecs/features/qt_functions.prf \
		/usr/lib64/qt4/mkspecs/features/qt_config.prf \
		/usr/lib64/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/lib64/qt4/mkspecs/features/default_pre.prf \
		/usr/lib64/qt4/mkspecs/features/release.prf \
		/usr/lib64/qt4/mkspecs/features/default_post.prf \
		/usr/lib64/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/lib64/qt4/mkspecs/features/warn_on.prf \
		/usr/lib64/qt4/mkspecs/features/qt.prf \
		/usr/lib64/qt4/mkspecs/features/unix/thread.prf \
		/usr/lib64/qt4/mkspecs/features/moc.prf \
		/usr/lib64/qt4/mkspecs/features/resources.prf \
		/usr/lib64/qt4/mkspecs/features/uic.prf \
		/usr/lib64/qt4/mkspecs/features/yacc.prf \
		/usr/lib64/qt4/mkspecs/features/lex.prf \
		/usr/lib64/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib64/libQtGui.prl \
		/usr/lib64/libQtCore.prl
	$(QMAKE) -o QMakefile life_gui.pro
/usr/lib64/qt4/mkspecs/common/unix.conf:
/usr/lib64/qt4/mkspecs/common/linux.conf:
/usr/lib64/qt4/mkspecs/common/gcc-base.conf:
/usr/lib64/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/lib64/qt4/mkspecs/common/g++-base.conf:
/usr/lib64/qt4/mkspecs/common/g++-unix.conf:
/usr/lib64/qt4/mkspecs/qconfig.pri:
/usr/lib64/qt4/mkspecs/modules/qt_phonon.pri:
/usr/lib64/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/lib64/qt4/mkspecs/features/qt_functions.prf:
/usr/lib64/qt4/mkspecs/features/qt_config.prf:
/usr/lib64/qt4/mkspecs/features/exclusive_builds.prf:
/usr/lib64/qt4/mkspecs/features/default_pre.prf:
/usr/lib64/qt4/mkspecs/features/release.prf:
/usr/lib64/qt4/mkspecs/features/default_post.prf:
/usr/lib64/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/lib64/qt4/mkspecs/features/warn_on.prf:
/usr/lib64/qt4/mkspecs/features/qt.prf:
/usr/lib64/qt4/mkspecs/features/unix/thread.prf:
/usr/lib64/qt4/mkspecs/features/moc.prf:
/usr/lib64/qt4/mkspecs/features/resources.prf:
/usr/lib64/qt4/mkspecs/features/uic.prf:
/usr/lib64/qt4/mkspecs/features/yacc.prf:
/usr/lib64/qt4/mkspecs/features/lex.prf:
/usr/lib64/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib64/libQtGui.prl:
/usr/lib64/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o QMakefile life_gui.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/life_gui1.0.0 || $(MKDIR) .tmp/life_gui1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/life_gui1.0.0/ && $(COPY_FILE) --parents control.h grid_window.h gui_grid.h life_parsing.h life_structs.h parsing.h .tmp/life_gui1.0.0/ && $(COPY_FILE) --parents control.cc grid_window.cc gui_grid.cc life_grid.cc life_gui.cc life_parsing.cc parsing.cc .tmp/life_gui1.0.0/ && (cd `dirname .tmp/life_gui1.0.0` && $(TAR) life_gui1.0.0.tar life_gui1.0.0 && $(COMPRESS) life_gui1.0.0.tar) && $(MOVE) `dirname .tmp/life_gui1.0.0`/life_gui1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/life_gui1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) QMakefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_control.cpp moc_grid_window.cpp moc_gui_grid.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_control.cpp moc_grid_window.cpp moc_gui_grid.cpp
moc_control.cpp: life_structs.h \
		control.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) control.h -o moc_control.cpp

moc_grid_window.cpp: gui_grid.h \
		life_parsing.h \
		parsing.h \
		life_structs.h \
		control.h \
		grid_window.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) grid_window.h -o moc_grid_window.cpp

moc_gui_grid.cpp: life_parsing.h \
		parsing.h \
		life_structs.h \
		gui_grid.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) gui_grid.h -o moc_gui_grid.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

control.o: control.cc control.h \
		life_structs.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o control.o control.cc

grid_window.o: grid_window.cc grid_window.h \
		gui_grid.h \
		life_parsing.h \
		parsing.h \
		life_structs.h \
		control.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o grid_window.o grid_window.cc

gui_grid.o: gui_grid.cc gui_grid.h \
		life_parsing.h \
		parsing.h \
		life_structs.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o gui_grid.o gui_grid.cc

life_grid.o: life_grid.cc life_structs.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o life_grid.o life_grid.cc

life_gui.o: life_gui.cc life_parsing.h \
		parsing.h \
		life_structs.h \
		grid_window.h \
		gui_grid.h \
		control.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o life_gui.o life_gui.cc

life_parsing.o: life_parsing.cc parsing.h \
		life_structs.h \
		life_parsing.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o life_parsing.o life_parsing.cc

parsing.o: parsing.cc life_structs.h \
		life_parsing.h \
		parsing.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o parsing.o parsing.cc

moc_control.o: moc_control.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_control.o moc_control.cpp

moc_grid_window.o: moc_grid_window.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_grid_window.o moc_grid_window.cpp

moc_gui_grid.o: moc_gui_grid.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_gui_grid.o moc_gui_grid.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

